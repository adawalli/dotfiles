// ============================================================================
// ZELLIJ KEYBINDINGS - PURE MODAL STRATEGY
// ============================================================================
// Philosophy: Minimize conflicts with CLI tools (fzf, atuin, nvim) and ensure
// perfect compatibility across macOS (Ghostty) and remote Unix systems via SSH.
//
// Key Design Decisions (based on research):
// 1. Ctrl+Space as universal leader - low collision risk, excellent SSH support
// 2. NO Alt bindings - they conflict with bash/vim/emacs and are problematic on macOS
// 3. Embrace Zellij's modal design - contextual help appears after Ctrl+Space
// 4. Lock mode (Ctrl+g) is essential - use it before opening vim/nvim/fzf
// 5. Minimal approach - only bind what's needed, let apps use native keys
//
// Quick Reference:
//   Ctrl+Space     → Enter mode selection (shows available modes)
//   Ctrl+g         → Toggle Lock mode (disables Zellij bindings for nested apps)
//   Ctrl+q         → Quit Zellij
//
// After Ctrl+Space, press:
//   p → Pane mode    (split, navigate, close panes)
//   t → Tab mode     (create, switch, close tabs)
//   r → Resize mode  (resize panes)
//   s → Scroll mode  (scroll buffer, search)
//   o → Session mode (detach, session manager)
//   m → Move mode    (move panes between tabs)
//   b → Tmux mode    (tmux compatibility for muscle memory)
// ============================================================================

keybinds clear-defaults=true {
    // ========================================================================
    // NORMAL MODE - Default mode when using the terminal
    // ========================================================================
    normal {
        // Universal leader key - press Ctrl+Space to see mode menu
        bind "Ctrl Space" { SwitchToMode "Pane"; }

        // Essential global commands
        bind "Ctrl g" { SwitchToMode "Locked"; }  // Lock before using vim/nvim/fzf
        bind "Ctrl q" { Quit; }                    // Quit Zellij
    }

    // ========================================================================
    // LOCKED MODE - Disables Zellij keybindings for nested applications
    // ========================================================================
    // Use this mode when running vim, nvim, fzf, or any app with its own keybindings
    // Press Ctrl+g to toggle back to Normal mode
    // ========================================================================
    locked {
        bind "Ctrl g" { SwitchToMode "Normal"; }
    }

    // ========================================================================
    // PANE MODE - Manage panes (splits)
    // ========================================================================
    // Enter: Ctrl+Space (from normal)
    // Actions available:
    //   hjkl/arrows - Navigate between panes
    //   n - New pane (let Zellij decide layout)
    //   d - New pane down (horizontal split)
    //   r - New pane right (vertical split)
    //   x - Close current pane
    //   f - Toggle fullscreen
    //   w - Toggle floating panes
    //   c - Rename current pane
    // ========================================================================
    pane {
        // Mode switching (secondary modes from pane mode)
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal mode
        bind "Esc" "Enter" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Pane navigation (vim-style + arrow keys)
        bind "h" "Left" { MoveFocus "Left"; }
        bind "j" "Down" { MoveFocus "Down"; }
        bind "k" "Up" { MoveFocus "Up"; }
        bind "l" "Right" { MoveFocus "Right"; }

        // Pane creation
        bind "n" { NewPane; SwitchToMode "Normal"; }
        bind "d" { NewPane "Down"; SwitchToMode "Normal"; }
        bind "v" { NewPane "Right"; SwitchToMode "Normal"; }  // 'v' for vertical split (vim-like)

        // Pane management
        bind "x" { CloseFocus; SwitchToMode "Normal"; }
        bind "f" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "z" { TogglePaneFrames; SwitchToMode "Normal"; }
        bind "w" { ToggleFloatingPanes; SwitchToMode "Normal"; }
        bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "Normal"; }
        bind "p" { SwitchFocus; }  // Cycle through panes

        // Rename pane
        bind "c" { SwitchToMode "RenamePane"; PaneNameInput 0; }
    }

    // ========================================================================
    // TAB MODE - Manage tabs (workspaces)
    // ========================================================================
    // Enter: Ctrl+Space, then 't'
    // Actions:
    //   n - New tab
    //   x - Close tab
    //   h/l - Previous/next tab
    //   1-9 - Jump to tab number
    //   c - Rename tab
    // ========================================================================
    tab {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Enter" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Tab navigation
        bind "h" "Left" "Up" "k" { GoToPreviousTab; }
        bind "l" "Right" "Down" "j" { GoToNextTab; }
        bind "Tab" { ToggleTab; }  // Toggle to last tab

        // Tab management
        bind "n" { NewTab; SwitchToMode "Normal"; }
        bind "x" { CloseTab; SwitchToMode "Normal"; }
        bind "c" { SwitchToMode "RenameTab"; TabNameInput 0; }

        // Jump to tab by number
        bind "1" { GoToTab 1; SwitchToMode "Normal"; }
        bind "2" { GoToTab 2; SwitchToMode "Normal"; }
        bind "3" { GoToTab 3; SwitchToMode "Normal"; }
        bind "4" { GoToTab 4; SwitchToMode "Normal"; }
        bind "5" { GoToTab 5; SwitchToMode "Normal"; }
        bind "6" { GoToTab 6; SwitchToMode "Normal"; }
        bind "7" { GoToTab 7; SwitchToMode "Normal"; }
        bind "8" { GoToTab 8; SwitchToMode "Normal"; }
        bind "9" { GoToTab 9; SwitchToMode "Normal"; }

        // Advanced tab operations
        bind "s" { ToggleActiveSyncTab; SwitchToMode "Normal"; }
        bind "b" { BreakPane; SwitchToMode "Normal"; }  // Break pane to new tab
        bind "]" { BreakPaneRight; SwitchToMode "Normal"; }
        bind "[" { BreakPaneLeft; SwitchToMode "Normal"; }
    }

    // ========================================================================
    // RESIZE MODE - Resize panes
    // ========================================================================
    // Enter: Ctrl+Space, then 'r'
    // Actions:
    //   hjkl - Increase size in direction
    //   HJKL - Decrease size in direction
    //   +/= - Increase overall
    //   - - Decrease overall
    // ========================================================================
    resize {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Enter" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Resize operations (vim-style)
        bind "h" "Left" { Resize "Increase Left"; }
        bind "j" "Down" { Resize "Increase Down"; }
        bind "k" "Up" { Resize "Increase Up"; }
        bind "l" "Right" { Resize "Increase Right"; }
        bind "H" { Resize "Decrease Left"; }
        bind "J" { Resize "Decrease Down"; }
        bind "K" { Resize "Decrease Up"; }
        bind "L" { Resize "Decrease Right"; }
        bind "=" "+" { Resize "Increase"; }
        bind "-" { Resize "Decrease"; }
    }

    // ========================================================================
    // SCROLL MODE - Scroll through terminal history
    // ========================================================================
    // Enter: Ctrl+Space, then 's'
    // Actions:
    //   jk - Scroll down/up
    //   Ctrl+f/b - Page down/up
    //   d/u - Half page down/up
    //   / - Search
    //   e - Edit scrollback in $EDITOR
    // ========================================================================
    scroll {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
        bind "q" { ScrollToBottom; SwitchToMode "Normal"; }

        // Scroll operations (vim-style)
        bind "j" "Down" { ScrollDown; }
        bind "k" "Up" { ScrollUp; }
        bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
        bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "u" { HalfPageScrollUp; }
        bind "G" { ScrollToBottom; }
        bind "g" { ScrollToTop; }

        // Search and edit
        bind "/" "s" { SwitchToMode "EnterSearch"; SearchInput 0; }
        bind "e" { EditScrollback; SwitchToMode "Normal"; }
    }

    // ========================================================================
    // SEARCH MODE - Search through scrollback buffer
    // ========================================================================
    search {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }

        // Return to scroll mode
        bind "Esc" "Ctrl Space" { SwitchToMode "Scroll"; }
        bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }

        // Navigation while searching
        bind "j" "Down" { ScrollDown; }
        bind "k" "Up" { ScrollUp; }
        bind "Ctrl f" "PageDown" { PageScrollDown; }
        bind "Ctrl b" "PageUp" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "u" { HalfPageScrollUp; }

        // Search navigation
        bind "n" { Search "down"; }
        bind "N" { Search "up"; }

        // Search options
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "w" { SearchToggleOption "Wrap"; }
        bind "o" { SearchToggleOption "WholeWord"; }
    }

    // ========================================================================
    // ENTERSEARCH MODE - Entering search query
    // ========================================================================
    entersearch {
        bind "Enter" { SwitchToMode "Search"; }
        bind "Esc" "Ctrl c" { SwitchToMode "Scroll"; }
    }

    // ========================================================================
    // SESSION MODE - Manage Zellij sessions
    // ========================================================================
    // Enter: Ctrl+Space, then 'o'
    // Actions:
    //   d - Detach from session
    //   w - Session manager
    //   c - Configuration
    //   p - Plugin manager
    // ========================================================================
    session {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "m" { SwitchToMode "Move"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Enter" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Session operations
        bind "d" { Detach; }

        // Launch plugins
        bind "w" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "c" {
            LaunchOrFocusPlugin "configuration" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        bind "p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
    }

    // ========================================================================
    // MOVE MODE - Move panes between tabs/positions
    // ========================================================================
    // Enter: Ctrl+Space, then 'm'
    // Actions:
    //   hjkl - Move pane in direction
    //   n/Tab - Move pane forward
    //   p - Move pane backward
    // ========================================================================
    move {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "o" { SwitchToMode "Session"; }
        bind "b" { SwitchToMode "Tmux"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Enter" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Move operations
        bind "n" "Tab" { MovePane; }
        bind "h" "Left" { MovePane "Left"; }
        bind "j" "Down" { MovePane "Down"; }
        bind "k" "Up" { MovePane "Up"; }
        bind "l" "Right" { MovePane "Right"; }
    }

    // ========================================================================
    // TMUX MODE - Tmux compatibility for muscle memory
    // ========================================================================
    // Enter: Ctrl+Space, then 'b'
    // Provides familiar tmux-style keybindings
    // ========================================================================
    tmux {
        // Mode switching
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "o" { SwitchToMode "Session"; }
        bind "m" { SwitchToMode "Move"; }
        bind "l" { SwitchToMode "Locked"; }
        bind "g" { SwitchToMode "Locked"; }

        // Return to normal
        bind "Esc" "Ctrl Space" { SwitchToMode "Normal"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }

        // Tmux-style bindings
        bind "[" { SwitchToMode "Scroll"; }
        bind "\"" { NewPane "Down"; SwitchToMode "Normal"; }
        bind "%" { NewPane "Right"; SwitchToMode "Normal"; }
        bind "z" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "c" { NewTab; SwitchToMode "Normal"; }
        bind "," { SwitchToMode "RenameTab"; }
        bind "n" { GoToNextTab; SwitchToMode "Normal"; }
        bind "h" { MoveFocus "Left"; SwitchToMode "Normal"; }
        bind "l" { MoveFocus "Right"; SwitchToMode "Normal"; }
        bind "j" { MoveFocus "Down"; SwitchToMode "Normal"; }
        bind "k" { MoveFocus "Up"; SwitchToMode "Normal"; }
        bind "Left" { MoveFocus "Left"; SwitchToMode "Normal"; }
        bind "Right" { MoveFocus "Right"; SwitchToMode "Normal"; }
        bind "Down" { MoveFocus "Down"; SwitchToMode "Normal"; }
        bind "Up" { MoveFocus "Up"; SwitchToMode "Normal"; }
        bind "o" { FocusNextPane; }
        bind "d" { Detach; }
        bind "Space" { NextSwapLayout; }
        bind "x" { CloseFocus; SwitchToMode "Normal"; }
    }

    // ========================================================================
    // RENAME MODES - Renaming tabs and panes
    // ========================================================================
    renametab {
        bind "Esc" { UndoRenameTab; SwitchToMode "Tab"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }
    }

    renamepane {
        bind "Esc" { UndoRenamePane; SwitchToMode "Pane"; }
        bind "Ctrl c" { SwitchToMode "Normal"; }
    }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    tab-bar location="zellij:tab-bar"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    compact-bar location="zellij:compact-bar"
    session-manager location="zellij:session-manager"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    filepicker location="zellij:strider" {
        cwd "/"
    }
    configuration location="zellij:configuration"
    plugin-manager location="zellij:plugin-manager"
    about location="zellij:about"
}

// Plugins to load in the background when a new session starts
load_plugins {
  // "file:/path/to/my-plugin.wasm"
  // "https://example.com/my-plugin.wasm"
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
// on_force_close "quit"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
// simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
// pane_frames true

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// session_serialization false

// Whether pane viewports are serialized along with the session, default is false
// (Requires restart)
// Options:
//   - true
//   - false (default)
//
// serialize_pane_viewport true

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000

// Define color themes for Zellij
// For more examples, see: https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the "theme" section of this file
//
// themes {
//     dracula {
//         fg 248 248 242
//         bg 40 42 54
//         red 255 85 85
//         green 80 250 123
//         yellow 241 250 140
//         blue 98 114 164
//         magenta 255 121 198
//         orange 255 184 108
//         cyan 139 233 253
//         black 0 0 0
//         white 255 255 255
//     }
// }
themes {
  catppuccin-latte {
    bg "#acb0be" // Surface2
    fg "#4c4f69" // Text
    red "#d20f39"
    green "#40a02b"
    blue "#1e66f5"
    yellow "#df8e1d"
    magenta "#ea76cb" // Pink
    orange "#fe640b" // Peach
    cyan "#04a5e5" // Sky
    black "#e6e9ef" // Mantle
    white "#4c4f69" // Text
  }

  catppuccin-frappe {
    bg "#626880" // Surface2
    fg "#c6d0f5" // Text
    red "#e78284"
    green "#a6d189"
    blue "#8caaee"
    yellow "#e5c890"
    magenta "#f4b8e4" // Pink
    orange "#ef9f76" // Peach
    cyan "#99d1db" // Sky
    black "#292c3c" // Mantle
    white "#c6d0f5" // Text
  }

  catppuccin-macchiato {
    bg "#5b6078" // Surface2
    fg "#cad3f5" // Text
    red "#ed8796"
    green "#a6da95"
    blue "#8aadf4"
    yellow "#eed49f"
    magenta "#f5bde6" // Pink
    orange "#f5a97f" // Peach
    cyan "#91d7e3" // Sky
    black "#1e2030" // Mantle
    white "#cad3f5" // Text
  }

  catppuccin-mocha {
    bg "#585b70" // Surface2
    fg "#cdd6f4" // Text
    red "#f38ba8"
    green "#a6e3a1"
    blue "#89b4fa"
    yellow "#f9e2af"
    magenta "#f5c2e7" // Pink
    orange "#fab387" // Peach
    cyan "#89dceb" // Sky
    black "#181825" // Mantle
    white "#cdd6f4" // Text
  }
}

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "catppuccin-mocha"

// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
//
// default_layout "compact"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
// default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "/path/to/my/theme_dir"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
// disable_session_metadata true

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false

// Whether to make sure a local web server is running when a new Zellij session starts.
// This web server will allow creating new sessions and attaching to existing ones that have
// opted in to being shared in the browser.
// When enabled, navigate to http://127.0.0.1:8082
// (Requires restart)
//
// Note: a local web server can still be manually started from within a Zellij session or from the CLI.
// If this is not desired, one can use a version of Zellij compiled without
// `web_server_capability`
//
// Possible values:
// - true
// - false
// Default: false
//
// web_server true

// Whether to allow sessions started in the terminal to be shared through a local web server, assuming one is
// running (see the `web_server` option for more details).
// (Requires restart)
//
// Note: This is an administrative separation and not intended as a security measure.
//
// Possible values:
// - "on" (allow web sharing through the local web server if it
// is online)
// - "off" (do not allow web sharing unless sessions explicitly opt-in to it)
// - "disabled" (do not allow web sharing and do not permit sessions started in the terminal to opt-in to it)
// Default: "off"
//
// web_sharing "on"

// The ip address the web server should listen on when it starts
// Default: "127.0.0.1"
// (Requires restart)
//
// web_server_ip "127.0.0.1"


// A path to a certificate file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_cert "/path/to/my/cert.pem"

// A path to a key file to be used when setting up the web client to serve the
// connection over HTTPs
//
// web_server_key "/path/to/my/key.pem"

// Whether to enforce https connections to the web server when it is bound to localhost
// (127.0.0.0/8)
//
// Note: https is ALWAYS enforced when bound to non-local interfaces
//
// Default: false
//
// enforce_https_for_localhost true

// The port the web server should listen on when it starts
// Default: 8082
// (Requires restart)
//
// web_server_port 8082

// Whether to stack panes when resizing beyond a certain size
// Default: true
//
// stacked_resize false

// Whether to show release notes on first version run
// Default: true
//
// show_release_notes false

// Whether to enable mouse hover effects and pane grouping functionality
// Default: true
//
// advanced_mouse_actions false

// A command to run (will be wrapped with sh -c and provided the RESURRECT_COMMAND env variable)
// after Zellij attempts to discover a command inside a pane when resurrecting sessions, the STDOUT
// of this command will be used instead of the discovered RESURRECT_COMMAND
// can be useful for removing wrappers around commands
// Note: be sure to escape backslashes and similar characters properly
//
// post_command_discovery_hook "echo $RESURRECT_COMMAND | sed <your_regex_here>"


web_client {
    font "monospace"
}
