{{ template "sh_header" . }}

# Dependency fingerprints to trigger rerun when lists change
{{ $brewfile := "Brewfile" }}
{{- if gt (len (glob $brewfile)) 0 }}
# brewfile_sha256: {{ sha256sum (include $brewfile) }}
{{- end -}}
{{ $aptlist := "apt-packages.txt" }}
{{- if gt (len (glob $aptlist)) 0 }}
# aptlist_sha256: {{ sha256sum (include $aptlist) }}
{{- end }}



{{ if eq .chezmoi.os "darwin" }}
if ! command -v brew >/dev/null 2>&1; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi
else
  eval "$(brew shellenv)"
fi

if [[ -f "{{ joinPath .chezmoi.sourceDir "Brewfile" }}" ]]; then
  brew bundle --file "{{ joinPath .chezmoi.sourceDir "Brewfile" }}"
fi

{{ else if eq .chezmoi.os "linux" }}
if [[ -f /etc/debian_version ]]; then

  # Add fury.io source for carapace if not present
  if [[ ! -f /etc/apt/sources.list.d/fury.list ]]; then
    echo 'deb [trusted=yes] https://apt.fury.io/rsteube/ /' | sudo tee /etc/apt/sources.list.d/fury.list
  fi

  sudo apt-get update -y

  mapfile -t pkgs < <(grep -vE '^\s*(#|$)' "{{ joinPath .chezmoi.sourceDir "apt-packages.txt" }}" 2>/dev/null || true)
  if [[ ${#pkgs[@]} -eq 0 ]]; then
    pkgs=(git curl ca-certificates fish fzf ripgrep jq fd-find bat)
  fi

  missing=()
  for p in "${pkgs[@]}"; do
    if ! dpkg -s "$p" >/dev/null 2>&1; then
      missing+=("$p")
    fi
  done

  if [[ ${#missing[@]} -gt 0 ]]; then
    echo "Installing missing packages via apt: ${missing[*]}"
    sudo apt-get install -y "${missing[@]}"
  fi

  case "{{ env "CHEZMOI_PROFILE" | default "default" }}" in
    minimal)
      ;;
    *)
      # Install additional tools via package managers
      ;;
  esac

  # Install starship via apt if not available
  if ! command -v starship >/dev/null 2>&1; then
    echo "Install sharship through Curl"
    curl -sS https://starship.rs/install.sh | sh
  fi

  # Install atuin if not available
  if ! command -v atuin >/dev/null 2>&1; then
    echo "Install atuin through Curl"
    curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh
  fi

  # Install zoxide if not available
  if ! command -v zoxide >/dev/null 2>&1; then
    echo "Install zoxide through Curl"
    curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
  fi

  # Install zellij if not available
  if ! command -v zellij >/dev/null 2>&1; then
    ZELLIJ_VERSION="0.43.1"

    {{ if eq .chezmoi.arch "amd64" -}}
    ARCH="x86_64"
    {{ else if eq .chezmoi.arch "arm64" -}}
    ARCH="aarch64"
    {{ else -}}
    echo "Unsupported architecture for zellij: {{ .chezmoi.arch }}"
    exit 1
    {{ end -}}

    ZELLIJ_URL="https://github.com/zellij-org/zellij/releases/download/v${ZELLIJ_VERSION}/zellij-${ARCH}-unknown-linux-musl.tar.gz"

    curl -L "$ZELLIJ_URL" -o /tmp/zellij.tar.gz
    tar -xzf /tmp/zellij.tar.gz -C /tmp
    mkdir -p "$HOME/.local/bin"
    mv /tmp/zellij "$HOME/.local/bin/zellij"
    rm /tmp/zellij.tar.gz
  fi

  # Install neovim if not available
  if ! command -v nvim >/dev/null 2>&1; then
    echo "Installing neovim from GitHub releases"

    {{ if eq .chezmoi.arch "amd64" -}}
    NVIM_ARCH="x86_64"
    {{ else if eq .chezmoi.arch "arm64" -}}
    NVIM_ARCH="arm64"
    {{ else -}}
    echo "Unsupported architecture for neovim: {{ .chezmoi.arch }}"
    exit 1
    {{ end -}}

    NVIM_URL="https://github.com/neovim/neovim/releases/latest/download/nvim-linux-${NVIM_ARCH}.tar.gz"

    curl -L "$NVIM_URL" -o /tmp/nvim.tar.gz
    tar -xzf /tmp/nvim.tar.gz -C /tmp
    mkdir -p "$HOME/.local"
    # Extract and merge into .local directory structure
    cp -r /tmp/nvim-linux-${NVIM_ARCH}/* "$HOME/.local/"
    rm -rf /tmp/nvim.tar.gz /tmp/nvim-linux-${NVIM_ARCH}
  fi

  # Install vivid if not available
  if ! command -v vivid >/dev/null 2>&1; then
    echo "Installing vivid from GitHub releases"
    VIVID_VERSION="0.10.1"

    {{ if eq .chezmoi.arch "amd64" -}}
    VIVID_ARCH="amd64"
    {{ else if eq .chezmoi.arch "arm64" -}}
    VIVID_ARCH="arm64"
    {{ else -}}
    echo "Unsupported architecture for vivid: {{ .chezmoi.arch }}"
    exit 1
    {{ end -}}

    VIVID_URL="https://github.com/sharkdp/vivid/releases/download/v${VIVID_VERSION}/vivid_${VIVID_VERSION}_${VIVID_ARCH}.deb"

    curl -L "$VIVID_URL" -o /tmp/vivid.deb
    sudo dpkg -i /tmp/vivid.deb
    rm /tmp/vivid.deb
  fi

fi
{{ end }}
exit 0
