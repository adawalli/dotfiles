{{ template "sh_header" . }}

# Dependency fingerprints to trigger rerun when lists change
{{ $brewfile := "Brewfile" }}
{{- if gt (len (glob $brewfile)) 0 }}
# brewfile_sha256: {{ sha256sum (include $brewfile) }}
{{- end -}}
{{ $aptlist := "apt-packages.txt" }}
{{- if gt (len (glob $aptlist)) 0 }}
# aptlist_sha256: {{ sha256sum (include $aptlist) }}
{{- end }}



{{ if not (env "CHEZMOI_NO_PACKAGES") }}
{{ if eq .chezmoi.os "darwin" }}
if ! command -v brew >/dev/null 2>&1; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi
else
  eval "$(brew shellenv)"
fi

if [[ -f "{{ joinPath .chezmoi.sourceDir "Brewfile" }}" ]]; then
  brew bundle --file "{{ joinPath .chezmoi.sourceDir "Brewfile" }}"
fi

{{ else if eq .chezmoi.os "linux" }}
if [[ -f /etc/debian_version ]]; then
  sudo apt-get update -y

  mapfile -t pkgs < <(grep -vE '^\s*(#|$)' "{{ joinPath .chezmoi.sourceDir "apt-packages.txt" }}" 2>/dev/null || true)
  if [[ ${#pkgs[@]} -eq 0 ]]; then
    pkgs=(git curl ca-certificates fish fzf ripgrep jq fd-find bat)
  fi

  case "{{ env "CHEZMOI_PROFILE" | default "default" }}" in
    minimal)
      ;;
    *)
      # zellij will be installed via cargo if not available via apt
      ;;
  esac

  for p in "${pkgs[@]}"; do
    if ! dpkg -s "$p" >/dev/null 2>&1; then
      sudo apt-get install -y "$p" || true
    fi
  done

  # Cargo fallbacks for Rust-based tools if apt packages failed or are unavailable
  if command -v cargo >/dev/null 2>&1; then
    # Install ripgrep via cargo if not available via apt
    if ! command -v rg >/dev/null 2>&1; then
      echo "Installing ripgrep via cargo..."
      cargo install ripgrep || true
    fi

    # Install fd via cargo if not available via apt (fd-find package provides 'fdfind' command)
    if ! command -v fd >/dev/null 2>&1 && ! command -v fdfind >/dev/null 2>&1; then
      echo "Installing fd via cargo..."
      cargo install fd-find || true
    fi

    # Install bat via cargo if not available via apt
    if ! command -v bat >/dev/null 2>&1 && ! command -v batcat >/dev/null 2>&1; then
      echo "Installing bat via cargo..."
      cargo install bat || true
    fi

    # Install additional useful Rust tools
    if ! command -v just >/dev/null 2>&1; then
      echo "Installing just via cargo..."
      cargo install just || true
    fi

    # Install starship via cargo if not available via apt
    if ! command -v starship >/dev/null 2>&1; then
      echo "Installing starship via cargo..."
      cargo install starship --locked || true
    fi

    # Install atuin via cargo if not available via apt
    if ! command -v atuin >/dev/null 2>&1; then
      echo "Installing atuin via cargo..."
      cargo install atuin || true
    fi
  fi

  # Install zellij via cargo if not available via apt
  if command -v cargo >/dev/null 2>&1; then
    if ! command -v zellij >/dev/null 2>&1; then
      echo "Installing zellij via cargo..."
      cargo install zellij || true
    fi
  fi
fi
{{ end }}
{{ end }}

exit 0
